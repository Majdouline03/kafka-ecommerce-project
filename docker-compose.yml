version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: commandes_db
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  api-backend:
    build:
      context: ./backend
    ports:
      - "4000:4000"
    depends_on:
      - kafka
      - db
    environment:
      PGUSER: admin
      PGPASSWORD: password
      PGDATABASE: commandes_db
      PGHOST: db
      PGPORT: 5432

  # web-frontend:
  #   build:
  #     context: ./frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - api-backend

  consumer-email:
    build:
      context: ./consumers
      dockerfile: Dockerfile.email
    depends_on:
      - kafka
    env_file:
      - .env

  consumer-topproducts:
    build:
      context: ./consumers
      dockerfile: Dockerfile.stats
    depends_on:
      - kafka
      - db
    env_file:
      - .env
    environment:
      PGUSER: admin
      PGPASSWORD: password
      PGDATABASE: commandes_db
      PGHOST: db
      PGPORT: 5432
